"use strict";
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.swapItems = void 0;
/**
 * @param items - array
 * @param previousIndex - number
 * @param currentIndex - number
 * @param mutate - mutate original array, or return swapped
 */
function swapItems(items, previousIndex, currentIndex, mutate) {
    if (mutate === void 0) { mutate = true; }
    var copy = mutate ? items : __spreadArray([], items, true);
    var first = copy[previousIndex];
    var second = copy[currentIndex];
    copy[currentIndex] = first;
    copy[previousIndex] = second;
    if (mutate) {
        return;
    }
    return copy;
}
exports.swapItems = swapItems;
